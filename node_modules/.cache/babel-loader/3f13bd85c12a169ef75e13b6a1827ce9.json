{"ast":null,"code":"import _classCallCheck from \"/home/nguyenxuancuong/Sites/unittest/react/crud-bai16/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nguyenxuancuong/Sites/unittest/react/crud-bai16/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/nguyenxuancuong/Sites/unittest/react/crud-bai16/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nguyenxuancuong/Sites/unittest/react/crud-bai16/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/nguyenxuancuong/Sites/unittest/react/crud-bai16/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/nguyenxuancuong/Sites/unittest/react/crud-bai16/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport TaskList from './components/TaskList';\nimport TaskForm from './components/TaskForm';\nimport TaskControl from './components/TaskControl';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.onGenerateData = function () {\n      var tasks = [{\n        id: _this.generateID(),\n        name: 'Hoc lap trinh',\n        status: true\n      }, {\n        id: _this.generateID(),\n        name: 'Di boi',\n        status: false\n      }, {\n        id: _this.generateID(),\n        name: 'Ngu',\n        status: true\n      }];\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    _this.onToggleForm = function () {\n      _this.setState({\n        isDisplayFrom: !_this.state.isDisplayFrom\n      });\n    };\n\n    _this.onCloseForm = function () {\n      _this.setState({\n        isDisplayFrom: false,\n        taskEditting: null\n      });\n    };\n\n    _this.onShowForm = function () {\n      _this.setState({\n        isDisplayFrom: true\n      });\n    };\n\n    _this.onSubmit = function (data) {\n      var tasks = _this.state.tasks;\n\n      if (data.id === '') {\n        data.id = _this.generateID();\n        tasks.push(data);\n      } else {\n        // //edit\n        var index = _this.findIndex(data.id);\n\n        tasks[index] = data;\n      }\n\n      _this.setState({\n        tasks: tasks,\n        taskEditting: null\n      });\n\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    _this.onUpdateStatus = function (id) {\n      var index = _this.findIndex(id);\n\n      var tasks = _this.state.tasks;\n\n      if (index !== -1) {\n        tasks[index].status = !tasks[index].status;\n\n        _this.setState({\n          tasks: tasks\n        });\n\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n      }\n    };\n\n    _this.onDelete = function (id) {\n      var index = _this.findIndex(id);\n\n      var tasks = _this.state.tasks;\n\n      if (index !== -1) {\n        tasks.splice(index, 1);\n\n        _this.setState({\n          tasks: tasks\n        });\n\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n      }\n\n      _this.onCloseForm();\n    };\n\n    _this.onUpdate = function (id) {\n      var tasks = _this.state.tasks;\n\n      var index = _this.findIndex(id);\n\n      var taskEditting = tasks[index];\n\n      _this.setState({\n        taskEditting: taskEditting\n      });\n\n      _this.onShowForm();\n    };\n\n    _this.findIndex = function (id) {\n      var tasks = _this.state.tasks;\n      var result = -1;\n      tasks.forEach(function (task, index) {\n        if (task.id === id) {\n          result = index;\n        }\n      });\n      return result;\n    };\n\n    _this.state = {\n      tasks: [],\n      isDisplayFrom: false,\n      taskEditting: null\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (localStorage && localStorage.getItem('tasks')) {\n        var tasks = JSON.parse(localStorage.getItem('tasks'));\n        this.setState({\n          tasks: tasks\n        });\n      }\n    }\n  }, {\n    key: \"s4\",\n    value: function s4() {\n      return Math.floor(1 * Math.random() * 0x10000).toString(16).substring(1);\n    }\n  }, {\n    key: \"generateID\",\n    value: function generateID() {\n      return this.s4() + this.s4() + '-' + this.s4();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          tasks = _this$state.tasks,\n          isDisplayFrom = _this$state.isDisplayFrom,\n          taskEditting = _this$state.taskEditting; //var tasks = this.state.tasks\n\n      var elementTaskForm = isDisplayFrom ? React.createElement(TaskForm, {\n        onSubmit: this.onSubmit,\n        onCloseForm: this.onCloseForm,\n        task: taskEditting,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }) : '';\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Qu\\u1EA3n L\\xFD C\\xF4ng Vi\\u1EC7c\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: isDisplayFrom ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, elementTaskForm), React.createElement(\"div\", {\n        className: isDisplayFrom ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: this.onToggleForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fa fa-plus mr-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), \"Th\\xEAm C\\xF4ng Vi\\u1EC7c\"), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-danger ml-5\",\n        onClick: this.onGenerateData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fa fa-plus mr-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }), \"Generate Data\"), React.createElement(TaskControl, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }), React.createElement(TaskList, {\n        onUpdateStatus: this.onUpdateStatus,\n        tasks: tasks,\n        onDelete: this.onDelete,\n        onUpdate: this.onUpdate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/nguyenxuancuong/Sites/unittest/react/crud-bai16/src/App.js"],"names":["React","Component","TaskList","TaskForm","TaskControl","App","props","onGenerateData","tasks","id","generateID","name","status","localStorage","setItem","JSON","stringify","onToggleForm","setState","isDisplayFrom","state","onCloseForm","taskEditting","onShowForm","onSubmit","data","push","index","findIndex","onUpdateStatus","onDelete","splice","onUpdate","result","forEach","task","getItem","parse","Math","floor","random","toString","substring","s4","elementTaskForm"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;IAEMC,G;;;;;AACF,eAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAChB,6EAAMA,KAAN;;AADgB,UAkBpBC,cAlBoB,GAkBH,YAAM;AACnB,UAAIC,KAAK,GAAG,CACR;AACIC,QAAAA,EAAE,EAAO,MAAKC,UAAL,EADb;AAEIC,QAAAA,IAAI,EAAK,eAFb;AAGIC,QAAAA,MAAM,EAAG;AAHb,OADQ,EAMR;AACIH,QAAAA,EAAE,EAAO,MAAKC,UAAL,EADb;AAEIC,QAAAA,IAAI,EAAK,QAFb;AAGIC,QAAAA,MAAM,EAAG;AAHb,OANQ,EAWR;AACIH,QAAAA,EAAE,EAAO,MAAKC,UAAL,EADb;AAEIC,QAAAA,IAAI,EAAK,KAFb;AAGIC,QAAAA,MAAM,EAAG;AAHb,OAXQ,CAAZ;AAkBAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeR,KAAf,CAA9B;AAEH,KAvCmB;;AAAA,UAyCpBS,YAzCoB,GAyCL,YAAM;AACf,YAAKC,QAAL,CAAc;AACVC,QAAAA,aAAa,EAAG,CAAC,MAAKC,KAAL,CAAWD;AADlB,OAAd;AAGL,KA7CmB;;AAAA,UAuDpBE,WAvDoB,GAuDN,YAAM;AAChB,YAAKH,QAAL,CAAc;AACVC,QAAAA,aAAa,EAAE,KADL;AAEVG,QAAAA,YAAY,EAAO;AAFT,OAAd;AAIH,KA5DmB;;AAAA,UA8DpBC,UA9DoB,GA8DP,YAAM;AACf,YAAKL,QAAL,CAAc;AACVC,QAAAA,aAAa,EAAE;AADL,OAAd;AAGH,KAlEmB;;AAAA,UAoEpBK,QApEoB,GAoET,UAACC,IAAD,EAAU;AAAA,UACZjB,KADY,GACH,MAAKY,KADF,CACZZ,KADY;;AAEf,UAAIiB,IAAI,CAAChB,EAAL,KAAY,EAAhB,EAAmB;AAEjBgB,QAAAA,IAAI,CAAChB,EAAL,GAAU,MAAKC,UAAL,EAAV;AACAF,QAAAA,KAAK,CAACkB,IAAN,CAAWD,IAAX;AACD,OAJD,MAIK;AACH;AACA,YAAIE,KAAK,GAAG,MAAKC,SAAL,CAAeH,IAAI,CAAChB,EAApB,CAAZ;;AACAD,QAAAA,KAAK,CAACmB,KAAD,CAAL,GAAeF,IAAf;AACD;;AACD,YAAKP,QAAL,CAAc;AACVV,QAAAA,KAAK,EAAcA,KADT;AAEVc,QAAAA,YAAY,EAAO;AAFT,OAAd;;AAIAT,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeR,KAAf,CAA9B;AACL,KApFmB;;AAAA,UAsFpBqB,cAtFoB,GAsFH,UAACpB,EAAD,EAAQ;AACrB,UAAIkB,KAAK,GAAG,MAAKC,SAAL,CAAenB,EAAf,CAAZ;;AADqB,UAEfD,KAFe,GAEL,MAAKY,KAFA,CAEfZ,KAFe;;AAGrB,UAAGmB,KAAK,KAAK,CAAC,CAAd,EAAgB;AACVnB,QAAAA,KAAK,CAACmB,KAAD,CAAL,CAAaf,MAAb,GAAsB,CAACJ,KAAK,CAACmB,KAAD,CAAL,CAAaf,MAApC;;AACA,cAAKM,QAAL,CAAc;AACXV,UAAAA,KAAK,EAAEA;AADI,SAAd;;AAGAK,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeR,KAAf,CAA9B;AACL;AACJ,KAhGmB;;AAAA,UAkGpBsB,QAlGoB,GAkGT,UAACrB,EAAD,EAAQ;AACf,UAAIkB,KAAK,GAAG,MAAKC,SAAL,CAAenB,EAAf,CAAZ;;AADe,UAETD,KAFS,GAEC,MAAKY,KAFN,CAETZ,KAFS;;AAGf,UAAGmB,KAAK,KAAK,CAAC,CAAd,EAAgB;AACZnB,QAAAA,KAAK,CAACuB,MAAN,CAAaJ,KAAb,EAAmB,CAAnB;;AACA,cAAKT,QAAL,CAAc;AACRV,UAAAA,KAAK,EAAEA;AADC,SAAd;;AAGAK,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeR,KAAf,CAA9B;AACH;;AACD,YAAKa,WAAL;AACH,KA7GmB;;AAAA,UAgHpBW,QAhHoB,GAgHT,UAACvB,EAAD,EAAQ;AAAA,UACTD,KADS,GACC,MAAKY,KADN,CACTZ,KADS;;AAEf,UAAImB,KAAK,GAAG,MAAKC,SAAL,CAAenB,EAAf,CAAZ;;AACA,UAAIa,YAAY,GAAGd,KAAK,CAACmB,KAAD,CAAxB;;AACA,YAAKT,QAAL,CAAc;AACTI,QAAAA,YAAY,EAAEA;AADL,OAAd;;AAGA,YAAKC,UAAL;AACH,KAxHmB;;AAAA,UA0HpBK,SA1HoB,GA0HR,UAACnB,EAAD,EAAQ;AAAA,UACXD,KADW,GACF,MAAKY,KADH,CACXZ,KADW;AAEhB,UAAIyB,MAAM,GAAG,CAAC,CAAd;AACAzB,MAAAA,KAAK,CAAC0B,OAAN,CAAc,UAACC,IAAD,EAAOR,KAAP,EAAiB;AAC3B,YAAGQ,IAAI,CAAC1B,EAAL,KAAYA,EAAf,EAAkB;AACdwB,UAAAA,MAAM,GAAGN,KAAT;AACH;AACJ,OAJD;AAKA,aAAOM,MAAP;AACH,KAnImB;;AAEhB,UAAKb,KAAL,GAAa;AACTZ,MAAAA,KAAK,EAAG,EADC;AAETW,MAAAA,aAAa,EAAG,KAFP;AAGTG,MAAAA,YAAY,EAAI;AAHP,KAAb;AAFgB;AAOnB;;;;yCAEmB;AAChB,UAAGT,YAAY,IAAIA,YAAY,CAACuB,OAAb,CAAqB,OAArB,CAAnB,EAAiD;AAC1C,YAAI5B,KAAK,GAAGO,IAAI,CAACsB,KAAL,CAAWxB,YAAY,CAACuB,OAAb,CAAqB,OAArB,CAAX,CAAZ;AACA,aAAKlB,QAAL,CAAc;AACTV,UAAAA,KAAK,EAAEA;AADE,SAAd;AAGN;AACJ;;;yBA+BG;AACC,aAAO8B,IAAI,CAACC,KAAL,CAAY,IAAGD,IAAI,CAACE,MAAL,EAAJ,GAAsB,OAAjC,EAA0CC,QAA1C,CAAmD,EAAnD,EAAuDC,SAAvD,CAAiE,CAAjE,CAAP;AACJ;;;iCAEW;AACL,aAAO,KAAKC,EAAL,KAAY,KAAKA,EAAL,EAAZ,GAAwB,GAAxB,GAA8B,KAAKA,EAAL,EAArC;AACN;;;6BAgFQ;AAAA,wBACwC,KAAKvB,KAD7C;AAAA,UACCZ,KADD,eACCA,KADD;AAAA,UACQW,aADR,eACQA,aADR;AAAA,UACuBG,YADvB,eACuBA,YADvB,EACoD;;AACzD,UAAIsB,eAAe,GAAGzB,aAAa,GAAG,oBAAC,QAAD;AAC9B,QAAA,QAAQ,EAAK,KAAKK,QADY;AAE9B,QAAA,WAAW,EAAK,KAAKH,WAFS;AAG9B,QAAA,IAAI,EAAKC,YAHqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,GAGE,EAHrC;AAIA,aACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADJ,EAC8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAD9B,CADJ,EAII;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAGH,aAAa,GAAG,qCAAH,GAA2C,EAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKyB,eADL,CADJ,EAII;AAAK,QAAA,SAAS,EAAGzB,aAAa,GAAG,qCAAH,GAA2C,yCAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACA,QAAA,IAAI,EAAC,QADL;AAEA,QAAA,SAAS,EAAC,iBAFV;AAGA,QAAA,OAAO,EAAE,KAAKF,YAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,8BADJ,EAQI;AACA,QAAA,IAAI,EAAC,QADL;AAEA,QAAA,SAAS,EAAC,qBAFV;AAGA,QAAA,OAAO,EAAE,KAAKV,cAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,kBARJ,EAgBI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBJ,EAiBI,oBAAC,QAAD;AACA,QAAA,cAAc,EAAK,KAAKsB,cADxB;AAEA,QAAA,KAAK,EAAKrB,KAFV;AAGA,QAAA,QAAQ,EAAK,KAAKsB,QAHlB;AAIA,QAAA,QAAQ,EAAK,KAAKE,QAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjBJ,CAJJ,CAJJ,CADJ;AAmCH;;;;EA/Ka/B,S;;AAmLlB,eAAeI,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport TaskList from './components/TaskList';\nimport TaskForm from './components/TaskForm';\nimport TaskControl from './components/TaskControl';\n\nclass App extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            tasks : [],\n            isDisplayFrom : false,\n            taskEditting  : null\n        }\n    }\n\n    componentWillMount(){\n        if(localStorage && localStorage.getItem('tasks')){\n               var tasks = JSON.parse(localStorage.getItem('tasks'));\n               this.setState({\n                    tasks: tasks\n               });\n        }\n    }\n\n    onGenerateData = () => {\n        var tasks = [\n            {\n                id     : this.generateID(),\n                name   : 'Hoc lap trinh',\n                status : true\n            },\n            {\n                id     : this.generateID(),\n                name   : 'Di boi',\n                status : false\n            },\n            {\n                id     : this.generateID(),\n                name   : 'Ngu',\n                status : true\n            }\n        ];\n\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n\n    }\n\n    onToggleForm = () => {\n          this.setState({\n              isDisplayFrom : !this.state.isDisplayFrom\n          })\n    }\n\n    s4(){\n         return Math.floor((1* Math.random() ) * 0x10000).toString(16).substring(1);\n    }\n\n    generateID(){\n           return this.s4() + this.s4() + '-' + this.s4();\n    }\n\n    onCloseForm = () => {\n        this.setState({\n            isDisplayFrom: false,\n            taskEditting     : null\n        })\n    }\n\n    onShowForm = () => {\n        this.setState({\n            isDisplayFrom: true\n        })\n    }\n\n    onSubmit = (data) => {\n        var {tasks} = this.state;\n          if (data.id === ''){\n\n            data.id = this.generateID();\n            tasks.push(data);\n          }else{\n            // //edit\n            var index = this.findIndex(data.id);\n            tasks[index] = data;\n          }\n          this.setState({\n              tasks            : tasks,\n              taskEditting     : null\n          });\n          localStorage.setItem('tasks', JSON.stringify(tasks));\n    }\n\n    onUpdateStatus = (id) => {\n        var index = this.findIndex(id);\n        var { tasks } = this.state;\n        if(index !== -1){\n              tasks[index].status = !tasks[index].status;\n              this.setState({\n                 tasks: tasks\n              })\n              localStorage.setItem('tasks', JSON.stringify(tasks));\n        }\n    }\n\n    onDelete = (id) => {\n        var index = this.findIndex(id);\n        var { tasks } = this.state;\n        if(index !== -1){\n            tasks.splice(index,1);\n            this.setState({\n                  tasks: tasks\n            })\n            localStorage.setItem('tasks', JSON.stringify(tasks));\n        }\n        this.onCloseForm();\n    }\n\n\n    onUpdate = (id) => {\n        var { tasks } = this.state;\n        var index = this.findIndex(id);\n        var taskEditting = tasks[index];\n        this.setState({\n             taskEditting: taskEditting\n        });\n        this.onShowForm();\n    }\n\n    findIndex = (id) => {\n        var {tasks} = this.state;\n        var result = -1;\n        tasks.forEach((task, index) => {\n            if(task.id === id){\n                result = index;\n            }\n        });\n        return result;\n    }\n\n    render() {\n        var { tasks, isDisplayFrom, taskEditting } = this.state; //var tasks = this.state.tasks\n        var elementTaskForm = isDisplayFrom ? <TaskForm\n                onSubmit = { this.onSubmit }\n                onCloseForm = { this.onCloseForm }\n                task = { taskEditting } /> : '';\n        return (\n            <div className=\"container\">\n                <div className=\"text-center\">\n                    <h1>Quản Lý Công Việc</h1><hr/>\n                </div>\n                <div className=\"row\">\n                    <div className={ isDisplayFrom ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : '' }>\n                        {elementTaskForm}\n                    </div>\n                    <div className= {isDisplayFrom ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12' }>\n                        <button\n                        type=\"button\"\n                        className=\"btn btn-primary\"\n                        onClick={this.onToggleForm} >\n                            <span className=\"fa fa-plus mr-5\"></span>\n                            Thêm Công Việc\n                        </button>\n                        <button\n                        type=\"button\"\n                        className=\"btn btn-danger ml-5\"\n                        onClick={this.onGenerateData}>\n                            <span className=\"fa fa-plus mr-5\"></span>\n                            Generate Data\n                        </button>\n\n                        <TaskControl />\n                        <TaskList\n                        onUpdateStatus = { this.onUpdateStatus }\n                        tasks = { tasks }\n                        onDelete = { this.onDelete }\n                        onUpdate = { this.onUpdate } />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}