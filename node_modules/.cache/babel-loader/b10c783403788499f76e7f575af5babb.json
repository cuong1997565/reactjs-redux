{"ast":null,"code":"import _classCallCheck from \"/home/nguyenxuancuong/Sites/unittest/react/reactjs-redux/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nguyenxuancuong/Sites/unittest/react/reactjs-redux/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/nguyenxuancuong/Sites/unittest/react/reactjs-redux/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nguyenxuancuong/Sites/unittest/react/reactjs-redux/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/nguyenxuancuong/Sites/unittest/react/reactjs-redux/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/nguyenxuancuong/Sites/unittest/react/reactjs-redux/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport TaskList from './components/TaskList';\nimport TaskForm from './components/TaskForm';\nimport TaskControl from './components/TaskControl';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport * as actions from './actions/index'; // import demo from './traning/demo1';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.onGenerateData = function () {\n      var tasks = [{\n        id: _this.generateID(),\n        name: 'Hoc lap trinh',\n        status: true\n      }, {\n        id: _this.generateID(),\n        name: 'Di boi',\n        status: false\n      }, {\n        id: _this.generateID(),\n        name: 'Ngu',\n        status: true\n      }];\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    _this.onToggleForm = function () {\n      //ThÃªm tasks\n      var editItem = _this.props.editItem;\n\n      if (editItem && editItem.id !== '') {\n        _this.props.onOpenForm();\n      } else {\n        _this.props.onToggleForm();\n      }\n\n      _this.props.onClearTask({\n        id: '',\n        name: '',\n        status: ''\n      });\n    };\n\n    _this.onSort = function (sortBy, sortValue) {\n      _this.setState({\n        sortBy: sortBy,\n        sortValue: sortValue\n      });\n    };\n\n    _this.state = {\n      filter: {\n        name: '',\n        status: -1\n      },\n      sortBy: 'name',\n      sortValue: 1\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          sortBy = _this$state.sortBy,\n          sortValue = _this$state.sortValue; //var tasks = this.state.tasks\n\n      var isDisplayFrom = this.props.isDisplayFrom;\n      var elementTaskForm = isDisplayFrom ? React.createElement(TaskForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }) : '';\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Qu\\u1EA3n L\\xFD C\\xF4ng Vi\\u1EC7c\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: isDisplayFrom ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, elementTaskForm), React.createElement(\"div\", {\n        className: isDisplayFrom ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: this.onToggleForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fa fa-plus mr-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), \"Th\\xEAm C\\xF4ng Vi\\u1EC7c\"), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-danger ml-5\",\n        onClick: this.onGenerateData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fa fa-plus mr-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), \"Generate Data\"), React.createElement(TaskControl, {\n        onSreach: this.onSreach,\n        onSort: this.onSort,\n        sortBy: sortBy,\n        sortValue: sortValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(TaskList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isDisplayFrom: state.isDisplayForm,\n    editItem: state.editItem\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, props) {\n  return {\n    onToggleForm: function onToggleForm() {\n      dispatch(actions.toggleForm());\n    },\n    onClearTask: function onClearTask(task) {\n      dispatch(actions.editItemTask(task));\n    },\n    onOpenForm: function onOpenForm() {\n      dispatch(actions.openForm());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/nguyenxuancuong/Sites/unittest/react/reactjs-redux/src/App.js"],"names":["React","Component","TaskList","TaskForm","TaskControl","_","connect","actions","App","props","onGenerateData","tasks","id","generateID","name","status","localStorage","setItem","JSON","stringify","onToggleForm","editItem","onOpenForm","onClearTask","onSort","sortBy","sortValue","setState","state","filter","isDisplayFrom","elementTaskForm","onSreach","mapStateToProps","isDisplayForm","mapDispatchToProps","dispatch","toggleForm","task","editItemTask","openForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport TaskList from './components/TaskList';\nimport TaskForm from './components/TaskForm';\nimport TaskControl from './components/TaskControl';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport * as actions from './actions/index';\n// import demo from './traning/demo1';\nclass App extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            filter        : {\n                name   : '',\n                status : -1\n            },\n            sortBy    : 'name',\n            sortValue :  1\n        }\n    }\n\n    onGenerateData = () => {\n        var tasks = [\n            {\n                id     : this.generateID(),\n                name   : 'Hoc lap trinh',\n                status : true\n            },\n            {\n                id     : this.generateID(),\n                name   : 'Di boi',\n                status : false\n            },\n            {\n                id     : this.generateID(),\n                name   : 'Ngu',\n                status : true\n            }\n        ];\n\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n\n    }\n\n    onToggleForm = () => {\n        //ThÃªm tasks\n        var { editItem } = this.props;\n        if(editItem && editItem.id !== ''){\n               this.props.onOpenForm();\n        }\n        else {\n                this.props.onToggleForm();\n        }\n        this.props.onClearTask({\n            id: '',\n            name: '',\n            status: ''\n        });\n    }\n\n\n    onSort = (sortBy, sortValue) => {\n            this.setState({\n               sortBy: sortBy,\n               sortValue: sortValue\n            });\n    }\n\n    render() {\n        var {\n        sortBy,\n        sortValue } = this.state; //var tasks = this.state.tasks\n\n        var { isDisplayFrom } = this.props;\n\n        var elementTaskForm = isDisplayFrom ? <TaskForm /> : '';\n        return (\n            <div className=\"container\">\n                <div className=\"text-center\">\n                    <h1>Quáº£n LÃ½ CÃ´ng Viá»c</h1><hr/>\n                </div>\n                <div className=\"row\">\n                    <div className={ isDisplayFrom ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : '' }>\n                     {elementTaskForm}\n                    </div>\n                    <div className= {isDisplayFrom ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12' }>\n                        <button\n                        type=\"button\"\n                        className=\"btn btn-primary\"\n                        onClick={this.onToggleForm} >\n                            <span className=\"fa fa-plus mr-5\"></span>\n                            ThÃªm CÃ´ng Viá»c\n                        </button>\n                        <button\n                        type=\"button\"\n                        className=\"btn btn-danger ml-5\"\n                        onClick={this.onGenerateData}>\n                            <span className=\"fa fa-plus mr-5\"></span>\n                            Generate Data\n                        </button>\n\n                        <TaskControl\n                        onSreach   = {this.onSreach}\n                        onSort     = {this.onSort}\n                        sortBy     = {sortBy}\n                        sortValue  = {sortValue}\n                         />\n                        <TaskList\n                   />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isDisplayFrom : state.isDisplayForm,\n        editItem      : state.editItem\n\n    };\n}\n\nconst mapDispatchToProps = (dispatch, props) =>{\n    return {\n        onToggleForm : () => {\n            dispatch(actions.toggleForm());\n        },\n        onClearTask : (task) => {\n            dispatch(actions.editItemTask(task));\n        },\n        onOpenForm : () => {\n            dispatch(actions.openForm());\n        }\n\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}