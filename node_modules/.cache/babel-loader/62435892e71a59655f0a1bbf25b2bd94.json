{"ast":null,"code":"import _toConsumableArray from \"/home/nguyenxuancuong/Sites/unittest/react/reactjs-redux/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as types from './../constants/ActionTypes';\n\nvar s4 = function s4() {\n  return Math.floor(1 * Math.random() * 0x10000).toString(16).substring(1);\n};\n\nvar ramdomID = function ramdomID() {\n  return s4() + s4() + '-' + s4();\n};\n\nvar data = JSON.parse(localStorage.getItem('tasks'));\nvar initialState = data ? data : [];\n\nvar myReducer = function myReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.LIST_ALL:\n      return state;\n\n    case types.ADD_TASK:\n      var newTask = {\n        id: ramdomID(),\n        name: action.task.name,\n        status: action.task.status === 'true' ? true : false\n      };\n      state.push(newTask);\n      localStorage.setItem('tasks', JSON.stringify(state));\n      return _toConsumableArray(state);\n\n    default:\n      return state;\n  }\n};\n\nexport default myReducer;","map":{"version":3,"sources":["/home/nguyenxuancuong/Sites/unittest/react/reactjs-redux/src/reducers/tasks.js"],"names":["types","s4","Math","floor","random","toString","substring","ramdomID","data","JSON","parse","localStorage","getItem","initialState","myReducer","state","action","type","LIST_ALL","ADD_TASK","newTask","id","name","task","status","push","setItem","stringify"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,4BAAvB;;AAEA,IAAIC,EAAE,GAAG,SAALA,EAAK,GAAK;AACL,SAAOC,IAAI,CAACC,KAAL,CAAY,IAAGD,IAAI,CAACE,MAAL,EAAJ,GAAsB,OAAjC,EAA0CC,QAA1C,CAAmD,EAAnD,EAAuDC,SAAvD,CAAiE,CAAjE,CAAP;AACJ,CAFL;;AAIA,IAAIC,QAAQ,GAAG,SAAXA,QAAW,GAAK;AACT,SAAON,EAAE,KAAKA,EAAE,EAAT,GAAc,GAAd,GAAoBA,EAAE,EAA7B;AACV,CAFD;;AAKA,IAAIO,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAX;AACA,IAAIC,YAAY,GAAGL,IAAI,GAAGA,IAAH,GAAU,EAAjC;;AACA,IAAIM,SAAS,GAAG,SAAZA,SAAY,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAC9C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKjB,KAAK,CAACkB,QAAX;AACI,aAAOH,KAAP;;AACJ,SAAKf,KAAK,CAACmB,QAAX;AACG,UAAIC,OAAO,GAAG;AACTC,QAAAA,EAAE,EAAQd,QAAQ,EADT;AAETe,QAAAA,IAAI,EAAMN,MAAM,CAACO,IAAP,CAAYD,IAFb;AAGTE,QAAAA,MAAM,EAAGR,MAAM,CAACO,IAAP,CAAYC,MAAZ,KAAuB,MAAvB,GAAgC,IAAhC,GAAuC;AAHvC,OAAd;AAKAT,MAAAA,KAAK,CAACU,IAAN,CAAWL,OAAX;AACAT,MAAAA,YAAY,CAACe,OAAb,CAAqB,OAArB,EAA8BjB,IAAI,CAACkB,SAAL,CAAeZ,KAAf,CAA9B;AACA,gCAAWA,KAAX;;AACH;AAAS,aAAOA,KAAP;AAZb;AAcH,CAfD;;AAiBA,eAAeD,SAAf","sourcesContent":["import * as types from './../constants/ActionTypes'\n\nvar s4 = () =>{\n         return Math.floor((1* Math.random() ) * 0x10000).toString(16).substring(1);\n    }\n\nvar ramdomID = () =>{\n           return s4() + s4() + '-' + s4();\n}\n\n\nvar data = JSON.parse(localStorage.getItem('tasks'));\nvar initialState = data ? data : [];\nvar myReducer = (state = initialState, action) => {\n    switch(action.type){\n        case types.LIST_ALL:\n            return state;\n        case types.ADD_TASK:\n           var newTask = {\n                id     :  ramdomID(),\n                name   :  action.task.name,\n                status : action.task.status === 'true' ? true : false\n           };\n           state.push(newTask);\n           localStorage.setItem('tasks', JSON.stringify(state));\n           return [...state];\n        default: return state;\n    }\n};\n\nexport default myReducer;\n"]},"metadata":{},"sourceType":"module"}