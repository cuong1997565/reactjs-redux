{"ast":null,"code":"import _defineProperty from \"/home/nguyenxuancuong/Sites/unittest/react/reactjs-redux/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/nguyenxuancuong/Sites/unittest/react/reactjs-redux/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nguyenxuancuong/Sites/unittest/react/reactjs-redux/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/nguyenxuancuong/Sites/unittest/react/reactjs-redux/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nguyenxuancuong/Sites/unittest/react/reactjs-redux/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/nguyenxuancuong/Sites/unittest/react/reactjs-redux/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/nguyenxuancuong/Sites/unittest/react/reactjs-redux/src/components/TaskList.js\";\nimport React, { Component } from 'react';\nimport TaskItem from './TaskItem';\nimport * as actions from './../actions/index';\nimport { connect } from 'react-redux';\n\nvar TaskList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TaskList, _Component);\n\n  function TaskList(props) {\n    var _this;\n\n    _classCallCheck(this, TaskList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TaskList).call(this, props));\n\n    _this.onChange = function (event) {\n      var target = event.target;\n      var name = target.name;\n      var value = target.value; // this.props.onFilter(\n      //    name === 'filterName' ? value : this.state.filterName,\n      //    name === 'filterStatus' ? value : this.state.filterStatus\n      //  )\n\n      var filter = {\n        name: name === 'filterName' ? value : _this.state.filterName,\n        status: name === 'filterStatus' ? value : _this.state.filterStatus\n      };\n\n      _this.props.onFilterTable(filter);\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.state = {\n      filterName: '',\n      filterStatus: ''\n    };\n    return _this;\n  }\n\n  _createClass(TaskList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          tasks = _this$props.tasks,\n          filterTable = _this$props.filterTable;\n      console.log(\"filterTable :\", filterTable); // filter on table\n\n      if (filterTable.name) {\n        tasks = tasks.filter(function (task) {\n          return task.name.toLowerCase().indexOf(filterTable.name.toLowerCase()) !== -1;\n        });\n      }\n\n      tasks = tasks.filter(function (task) {\n        if (filterTable.status === -1) {\n          return task;\n        } else {\n          return task.status === filterTable.status === 1 ? true : false;\n        }\n      });\n      var _this$state = this.state,\n          filterName = _this$state.filterName,\n          filterStatus = _this$state.filterStatus;\n      var elmTasks = tasks.map(function (task, index) {\n        return React.createElement(TaskItem, {\n          key: task.id,\n          index: index,\n          task: task,\n          onUpdate: _this2.props.onUpdate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        className: \"row mt-15\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table table-bordered table-hover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"STT\"), React.createElement(\"th\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"T\\xEAn\"), React.createElement(\"th\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Tr\\u1EA1ng Th\\xE1i\"), React.createElement(\"th\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"H\\xE0nh \\u0110\\u1ED9ng\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"filterName\",\n        value: filterName,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: \"form-control\",\n        name: \"filterStatus\",\n        value: filterStatus,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: -1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"T\\u1EA5t C\\u1EA3\"), React.createElement(\"option\", {\n        value: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"\\u1EA8n\"), React.createElement(\"option\", {\n        value: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"K\\xEDch Ho\\u1EA1t\"))), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })), elmTasks))));\n    }\n  }]);\n\n  return TaskList;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    tasks: state.tasks,\n    filterTable: state.filterTable\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, props) {\n  return {\n    onFilterTable: function onFilterTable(filter) {\n      dispatch(actions.filterTableTask(filter));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList);","map":{"version":3,"sources":["/home/nguyenxuancuong/Sites/unittest/react/reactjs-redux/src/components/TaskList.js"],"names":["React","Component","TaskItem","actions","connect","TaskList","props","onChange","event","target","name","value","filter","state","filterName","status","filterStatus","onFilterTable","setState","tasks","filterTable","console","log","task","toLowerCase","indexOf","elmTasks","map","index","id","onUpdate","mapStateToProps","mapDispatchToProps","dispatch","filterTableTask"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport TaskItem from './TaskItem';\nimport * as actions from './../actions/index';\nimport { connect } from 'react-redux';\nclass TaskList extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            filterName: '',\n            filterStatus: ''\n        }\n    }\n\n    onChange = (event) => {\n           var target = event.target;\n           var name   = target.name;\n           var value  = target.value;\n           // this.props.onFilter(\n           //    name === 'filterName' ? value : this.state.filterName,\n           //    name === 'filterStatus' ? value : this.state.filterStatus\n           //  )\n           var filter = {\n               name   : name === 'filterName' ? value : this.state.filterName,\n               status : name === 'filterStatus' ? value : this.state.filterStatus\n           };\n           this.props.onFilterTable(filter);\n           this.setState({\n              [name] : value\n           });\n    }\n    render() {\n        var { tasks, filterTable } = this.props;\n        console.log(\"filterTable :\", filterTable);\n        // filter on table\n        if(filterTable.name){\n          tasks = tasks.filter((task) => {\n              return task.name.toLowerCase().indexOf(filterTable.name.toLowerCase()) !== -1\n          });\n        }\n        tasks = tasks.filter((task) => {\n            if(filterTable.status === -1){\n              return task;\n            }else{\n              return task.status === filterTable.status === 1 ? true : false;\n            }\n        });\n        var {filterName, filterStatus} = this.state;\n        var elmTasks = tasks.map((task, index) => {\n               return  <TaskItem\n               key={task.id}\n               index={index}\n               task={task}\n               onUpdate  = { this.props.onUpdate }\n\n                />\n        });\n        return (\n            <div className=\"row mt-15\">\n                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                    <table className=\"table table-bordered table-hover\">\n                        <thead>\n                            <tr>\n                                <th className=\"text-center\">STT</th>\n                                <th className=\"text-center\">Tên</th>\n                                <th className=\"text-center\">Trạng Thái</th>\n                                <th className=\"text-center\">Hành Động</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td></td>\n                                <td>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"filterName\"\n                                        value={filterName}\n                                        onChange = {this.onChange}\n                                    />\n                                </td>\n                                <td>\n                                    <select\n                                        className=\"form-control\"\n                                        name= \"filterStatus\"\n                                        value    = {filterStatus}\n                                        onChange = { this.onChange }\n                                    >\n                                        <option value={-1}>Tất Cả</option>\n                                        <option value={0} >Ẩn</option>\n                                        <option value={1}>Kích Hoạt</option>\n                                    </select>\n                                </td>\n                                <td></td>\n                            </tr>\n                            { elmTasks }\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        tasks       : state.tasks,\n        filterTable : state.filterTable\n    }\n}\n\nconst mapDispatchToProps = (dispatch, props) => {\n    return {\n        onFilterTable : (filter) => {\n            dispatch(actions.filterTableTask(filter))\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList);\n"]},"metadata":{},"sourceType":"module"}